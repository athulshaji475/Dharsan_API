//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Guruvayur_api2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Guruvayur_VisitEntities : DbContext
    {
        public Guruvayur_VisitEntities()
            : base("name=Guruvayur_VisitEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<GetGate_Result> GetGate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGate_Result>("GetGate");
        }
    
        public virtual ObjectResult<GetInitSettings_Result> GetInitSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInitSettings_Result>("GetInitSettings");
        }
    
        public virtual ObjectResult<GetManagement_Result> GetManagement()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetManagement_Result>("GetManagement");
        }
    
        public virtual ObjectResult<GetTimeSloat_Result> GetTimeSloat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTimeSloat_Result>("GetTimeSloat");
        }
    
        public virtual ObjectResult<GetVisiter_Result> GetVisiter()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVisiter_Result>("GetVisiter");
        }
    
        public virtual ObjectResult<GetViviterByLinkAddress_Result> GetViviterByLinkAddress(Nullable<System.Guid> linkid)
        {
            var linkidParameter = linkid.HasValue ?
                new ObjectParameter("linkid", linkid) :
                new ObjectParameter("linkid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetViviterByLinkAddress_Result>("GetViviterByLinkAddress", linkidParameter);
        }
    
        public virtual int InsertGate(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGate", nameParameter);
        }
    
        public virtual int InsertManagement(string phone, string name, string designation, Nullable<int> dview)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var dviewParameter = dview.HasValue ?
                new ObjectParameter("Dview", dview) :
                new ObjectParameter("Dview", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertManagement", phoneParameter, nameParameter, designationParameter, dviewParameter);
        }
    
        public virtual ObjectResult<InsertOtp_Result> InsertOtp(string phone, string otp)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertOtp_Result>("InsertOtp", phoneParameter, otpParameter);
        }
    
        public virtual int InsertTimeSloat(string sloat)
        {
            var sloatParameter = sloat != null ?
                new ObjectParameter("Sloat", sloat) :
                new ObjectParameter("Sloat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertTimeSloat", sloatParameter);
        }
    
        public virtual ObjectResult<InsertVisiter_Result> InsertVisiter(Nullable<int> mId, Nullable<int> tsId, Nullable<int> gId, string visiterName, string visiterMobile, string visiterPlace, Nullable<System.DateTime> enterdon, Nullable<System.DateTime> pDate, Nullable<System.DateTime> printedOn, Nullable<int> status, Nullable<int> enterdBy, Nullable<int> noOfP, string remarks)
        {
            var mIdParameter = mId.HasValue ?
                new ObjectParameter("MId", mId) :
                new ObjectParameter("MId", typeof(int));
    
            var tsIdParameter = tsId.HasValue ?
                new ObjectParameter("TsId", tsId) :
                new ObjectParameter("TsId", typeof(int));
    
            var gIdParameter = gId.HasValue ?
                new ObjectParameter("GId", gId) :
                new ObjectParameter("GId", typeof(int));
    
            var visiterNameParameter = visiterName != null ?
                new ObjectParameter("VisiterName", visiterName) :
                new ObjectParameter("VisiterName", typeof(string));
    
            var visiterMobileParameter = visiterMobile != null ?
                new ObjectParameter("VisiterMobile", visiterMobile) :
                new ObjectParameter("VisiterMobile", typeof(string));
    
            var visiterPlaceParameter = visiterPlace != null ?
                new ObjectParameter("VisiterPlace", visiterPlace) :
                new ObjectParameter("VisiterPlace", typeof(string));
    
            var enterdonParameter = enterdon.HasValue ?
                new ObjectParameter("Enterdon", enterdon) :
                new ObjectParameter("Enterdon", typeof(System.DateTime));
    
            var pDateParameter = pDate.HasValue ?
                new ObjectParameter("PDate", pDate) :
                new ObjectParameter("PDate", typeof(System.DateTime));
    
            var printedOnParameter = printedOn.HasValue ?
                new ObjectParameter("PrintedOn", printedOn) :
                new ObjectParameter("PrintedOn", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var enterdByParameter = enterdBy.HasValue ?
                new ObjectParameter("EnterdBy", enterdBy) :
                new ObjectParameter("EnterdBy", typeof(int));
    
            var noOfPParameter = noOfP.HasValue ?
                new ObjectParameter("NoOfP", noOfP) :
                new ObjectParameter("NoOfP", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertVisiter_Result>("InsertVisiter", mIdParameter, tsIdParameter, gIdParameter, visiterNameParameter, visiterMobileParameter, visiterPlaceParameter, enterdonParameter, pDateParameter, printedOnParameter, statusParameter, enterdByParameter, noOfPParameter, remarksParameter);
        }
    
        public virtual ObjectResult<InsertVisiterByLink_Result> InsertVisiterByLink(Nullable<int> mId, Nullable<int> tsId, Nullable<int> gId, string visiterName, string visiterMobile, string visiterPlace, Nullable<System.DateTime> enterdon, Nullable<System.DateTime> pDate, Nullable<System.DateTime> printedOn, Nullable<int> status, Nullable<int> enterdBy, Nullable<int> noOfP, string remarks, Nullable<System.Guid> linkid)
        {
            var mIdParameter = mId.HasValue ?
                new ObjectParameter("MId", mId) :
                new ObjectParameter("MId", typeof(int));
    
            var tsIdParameter = tsId.HasValue ?
                new ObjectParameter("TsId", tsId) :
                new ObjectParameter("TsId", typeof(int));
    
            var gIdParameter = gId.HasValue ?
                new ObjectParameter("GId", gId) :
                new ObjectParameter("GId", typeof(int));
    
            var visiterNameParameter = visiterName != null ?
                new ObjectParameter("VisiterName", visiterName) :
                new ObjectParameter("VisiterName", typeof(string));
    
            var visiterMobileParameter = visiterMobile != null ?
                new ObjectParameter("VisiterMobile", visiterMobile) :
                new ObjectParameter("VisiterMobile", typeof(string));
    
            var visiterPlaceParameter = visiterPlace != null ?
                new ObjectParameter("VisiterPlace", visiterPlace) :
                new ObjectParameter("VisiterPlace", typeof(string));
    
            var enterdonParameter = enterdon.HasValue ?
                new ObjectParameter("Enterdon", enterdon) :
                new ObjectParameter("Enterdon", typeof(System.DateTime));
    
            var pDateParameter = pDate.HasValue ?
                new ObjectParameter("PDate", pDate) :
                new ObjectParameter("PDate", typeof(System.DateTime));
    
            var printedOnParameter = printedOn.HasValue ?
                new ObjectParameter("PrintedOn", printedOn) :
                new ObjectParameter("PrintedOn", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var enterdByParameter = enterdBy.HasValue ?
                new ObjectParameter("EnterdBy", enterdBy) :
                new ObjectParameter("EnterdBy", typeof(int));
    
            var noOfPParameter = noOfP.HasValue ?
                new ObjectParameter("NoOfP", noOfP) :
                new ObjectParameter("NoOfP", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var linkidParameter = linkid.HasValue ?
                new ObjectParameter("Linkid", linkid) :
                new ObjectParameter("Linkid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertVisiterByLink_Result>("InsertVisiterByLink", mIdParameter, tsIdParameter, gIdParameter, visiterNameParameter, visiterMobileParameter, visiterPlaceParameter, enterdonParameter, pDateParameter, printedOnParameter, statusParameter, enterdByParameter, noOfPParameter, remarksParameter, linkidParameter);
        }
    
        public virtual ObjectResult<Update_Visiters_Status_Result> Update_Visiters_Status(Nullable<int> num, Nullable<int> id)
        {
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Update_Visiters_Status_Result>("Update_Visiters_Status", numParameter, idParameter);
        }
    
        public virtual ObjectResult<Update_Visiters_Status_delete_Result> Update_Visiters_Status_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Update_Visiters_Status_delete_Result>("Update_Visiters_Status_delete", idParameter);
        }
    
        public virtual ObjectResult<Update_Visiters_Status_Printed_Result> Update_Visiters_Status_Printed(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Update_Visiters_Status_Printed_Result>("Update_Visiters_Status_Printed", idParameter);
        }
    
        public virtual ObjectResult<GetViwersListForApprove_Individuals_ByLink_Result> GetViwersListForApprove_Individuals_ByLink(Nullable<int> mid)
        {
            var midParameter = mid.HasValue ?
                new ObjectParameter("Mid", mid) :
                new ObjectParameter("Mid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetViwersListForApprove_Individuals_ByLink_Result>("GetViwersListForApprove_Individuals_ByLink", midParameter);
        }
    
        public virtual ObjectResult<Approved_ByStaff_ToAdmin_Result> Approved_ByStaff_ToAdmin(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Approved_ByStaff_ToAdmin_Result>("Approved_ByStaff_ToAdmin", idParameter);
        }
    
        public virtual ObjectResult<UpdateLinuser_Result> UpdateLinuser(Nullable<int> sloatid, string visiterName, string visiterMobile, string visiterPlace, Nullable<System.DateTime> pDate, Nullable<System.DateTime> printedOn, Nullable<int> noOfP, string remarks, Nullable<System.Guid> linkid)
        {
            var sloatidParameter = sloatid.HasValue ?
                new ObjectParameter("Sloatid", sloatid) :
                new ObjectParameter("Sloatid", typeof(int));
    
            var visiterNameParameter = visiterName != null ?
                new ObjectParameter("VisiterName", visiterName) :
                new ObjectParameter("VisiterName", typeof(string));
    
            var visiterMobileParameter = visiterMobile != null ?
                new ObjectParameter("VisiterMobile", visiterMobile) :
                new ObjectParameter("VisiterMobile", typeof(string));
    
            var visiterPlaceParameter = visiterPlace != null ?
                new ObjectParameter("VisiterPlace", visiterPlace) :
                new ObjectParameter("VisiterPlace", typeof(string));
    
            var pDateParameter = pDate.HasValue ?
                new ObjectParameter("PDate", pDate) :
                new ObjectParameter("PDate", typeof(System.DateTime));
    
            var printedOnParameter = printedOn.HasValue ?
                new ObjectParameter("PrintedOn", printedOn) :
                new ObjectParameter("PrintedOn", typeof(System.DateTime));
    
            var noOfPParameter = noOfP.HasValue ?
                new ObjectParameter("NoOfP", noOfP) :
                new ObjectParameter("NoOfP", typeof(int));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var linkidParameter = linkid.HasValue ?
                new ObjectParameter("Linkid", linkid) :
                new ObjectParameter("Linkid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UpdateLinuser_Result>("UpdateLinuser", sloatidParameter, visiterNameParameter, visiterMobileParameter, visiterPlaceParameter, pDateParameter, printedOnParameter, noOfPParameter, remarksParameter, linkidParameter);
        }
    
        public virtual ObjectResult<GetViwersListForApprove_Individuals_Result> GetViwersListForApprove_Individuals(Nullable<int> mid)
        {
            var midParameter = mid.HasValue ?
                new ObjectParameter("Mid", mid) :
                new ObjectParameter("Mid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetViwersListForApprove_Individuals_Result>("GetViwersListForApprove_Individuals", midParameter);
        }
    
        public virtual ObjectResult<GetViwersListForApprove_Result> GetViwersListForApprove(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetViwersListForApprove_Result>("GetViwersListForApprove", idParameter);
        }
    
        public virtual ObjectResult<CheckOtpFromOtp_Tb_Result> CheckOtpFromOtp_Tb(string otp, string phone)
        {
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckOtpFromOtp_Tb_Result>("CheckOtpFromOtp_Tb", otpParameter, phoneParameter);
        }
    
        public virtual ObjectResult<GetManagementData_Result> GetManagementData(string phone)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetManagementData_Result>("GetManagementData", phoneParameter);
        }
    
        public virtual ObjectResult<GetManagementTotalLimitsPerDay_Result> GetManagementTotalLimitsPerDay(Nullable<int> mid, Nullable<System.DateTime> date)
        {
            var midParameter = mid.HasValue ?
                new ObjectParameter("Mid", mid) :
                new ObjectParameter("Mid", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetManagementTotalLimitsPerDay_Result>("GetManagementTotalLimitsPerDay", midParameter, dateParameter);
        }
    }
}
